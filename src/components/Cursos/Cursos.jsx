import React, { useState } from "react";
import "./Cursos.css";

const cursosData = [
  {
    id: 1,
    emoji: "üéì",
    titulo: "Psicografolog√≠a",
    subtitulo: "Formaci√≥n Profesional en Psicografolog√≠a",
    tipo: "Carrera t√©cnica",
    duracion: "1 a 2 a√±os",
    miniIntro: "Explor√° el universo de la escritura como herramienta de evaluaci√≥n psicol√≥gica y profesional.",
    descripcion: "Formaci√≥n completa en an√°lisis grafol√≥gico para aplicar en √°mbitos cl√≠nicos, educativos y forenses."
  },
  {
    id: 2,
    emoji: "üïµÔ∏è",
    titulo: "Ciencias Criminalistas",
    subtitulo: "Diplomatura en Ciencias Criminalistas",
    tipo: "Diplomatura",
    duracion: "8 a 12 meses",
    miniIntro: "Sumate al mundo de la investigaci√≥n cient√≠fica del delito desde una perspectiva profesional.",
    descripcion: "Integra conocimientos en criminal√≠stica, perfilaci√≥n, pericias y an√°lisis forense moderno."
  },
  {
    id: 3,
    emoji: "üß©",
    titulo: "Perfilamiento Criminal",
    subtitulo: "Perfilamiento Criminal",
    tipo: "Curso especializado",
    duracion: "4 a 6 meses",
    miniIntro: "Aprend√© a identificar patrones conductuales y construir perfiles delictivos.",
    descripcion: "Capacitaci√≥n t√©cnica en criminal profiling, enfocado en criminolog√≠a, tipolog√≠as y an√°lisis psicol√≥gico."
  },
  {
    id: 4,
    emoji: "üß†",
    titulo: "Psicolog√≠a Social",
    subtitulo: "Psicolog√≠a Social (3 a√±os)",
    tipo: "Carrera terciaria",
    duracion: "3 a√±os",
    miniIntro: "Descubr√≠ c√≥mo la sociedad moldea la conducta humana desde una mirada integradora.",
    descripcion: "Formaci√≥n profesional en intervenci√≥n grupal, comunitaria y organizacional con enfoque social."
  },
  {
    id: 5,
    emoji: "üßæ",
    titulo: "Grafolog√≠a Forense",
    subtitulo: "Grafolog√≠a Forense",
    tipo: "Curso profesional",
    duracion: "6 a 9 meses",
    miniIntro: "Capacitate en el an√°lisis legal de manuscritos y documentos gr√°ficos.",
    descripcion: "Especializaci√≥n en pericias grafol√≥gicas para determinar autenticidad, autor√≠a y falsificaci√≥n."
  },
  {
    id: 6,
    emoji: "‚úíÔ∏è",
    titulo: "Firmas y R√∫bricas",
    subtitulo: "Firmas y R√∫bricas",
    tipo: "Curso intensivo",
    duracion: "2 a 3 meses",
    miniIntro: "Explor√° el valor simb√≥lico y legal de las firmas en la identidad escrita.",
    descripcion: "Estudio detallado de la r√∫brica y firma como reflejo ps√≠quico y objeto de an√°lisis t√©cnico."
  },
  {
    id: 7,
    emoji: "üÜò",
    titulo: "Primeros Auxilios Psicol√≥gicos",
    subtitulo: "Operador en Primeros Auxilios Psicol√≥gicos",
    tipo: "Curso de intervenci√≥n",
    duracion: "3 a 5 meses",
    miniIntro: "Formate para contener y asistir emocionalmente en situaciones de emergencia.",
    descripcion: "T√©cnicas pr√°cticas de contenci√≥n, estabilizaci√≥n emocional y derivaci√≥n segura."
  },
  {
    id: 8,
    emoji: "üé®",
    titulo: "An√°lisis de Dibujos",
    subtitulo: "An√°lisis de Dibujos",
    tipo: "Curso proyectivo",
    duracion: "3 a 4 meses",
    miniIntro: "Aprend√© a interpretar gr√°ficamente el mundo interno de ni√±os, adolescentes y adultos.",
    descripcion: "Aplicaci√≥n psicol√≥gica del dibujo en procesos diagn√≥sticos, terap√©uticos y forenses."
  }
];

const Cursos = () => {
  const [isExpanded, setIsExpanded] = useState(false);

  const toggleAccordion = () => {
    setIsExpanded(!isExpanded);
  };

  const getTipoColor = (tipo) => {
    switch (tipo) {
      case "Carrera t√©cnica":
        return "#2E8B57";
      case "Carrera terciaria":
        return "#0F2A4E";
      case "Diplomatura":
        return "#B8860B";
      case "Curso especializado":
        return "#8B4513";
      case "Curso profesional":
        return "#4682B4";
      case "Curso intensivo":
        return "#CD853F";
      case "Curso de intervenci√≥n":
        return "#9932CC";
      case "Curso proyectivo":
        return "#FF6347";
      default:
        return "#666";
    }
  };

  return (
    <section className="cursos-section">
      <div className="cursos-container">
        {/* T√≠tulo general */}
        <div className="cursos-header">
          <div className="cursos-title-wrapper">
            <svg className="cursos-icon" width="32" height="32" viewBox="0 0 24 24" fill="none">
              <path d="M12 3L1 9L12 15L21 10.09V17H23V9L12 3ZM5 13.18V17.18L12 21L19 17.18V13.18L12 17L5 13.18Z" fill="currentColor"/>
            </svg>
            <h2 className="cursos-title">Conoc√© nuestras carreras y cursos</h2>
          </div>
          <div className="cursos-title-line"></div>
        </div>

        {/* Acorde√≥n */}
        <div className="accordion-container">
          <button 
            className={`accordion-trigger ${isExpanded ? 'expanded' : ''}`}
            onClick={toggleAccordion}
            aria-expanded={isExpanded}
          >
            <span className="accordion-text">
              {isExpanded ? 'Ocultar carreras y cursos' : 'Ver todas nuestras carreras y cursos'}
            </span>
            <svg 
              className={`accordion-arrow ${isExpanded ? 'rotated' : ''}`} 
              width="24" 
              height="24" 
              viewBox="0 0 24 24" 
              fill="none"
            >
              <path d="M7 10L12 15L17 10" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </button>

          {/* Cards container */}
          <div className={`cards-container ${isExpanded ? 'expanded' : ''}`}>
            <div className="cards-grid">
              {cursosData.map((curso) => (
                <div 
                  key={curso.id} 
                  className="curso-card"
                  style={{ '--delay': `${curso.id * 0.15}s` }}
                >
                  <div className="card-content">
                    <div className="card-emoji">{curso.emoji}</div>
                    
                    <div className="card-header">
                      <h3 className="card-titulo">{curso.titulo}</h3>
                      <div className="card-badges">
                        <span 
                          className="tipo-badge"
                          style={{ backgroundColor: getTipoColor(curso.tipo) }}
                        >
                          {curso.tipo}
                        </span>
                        <span className="duracion-badge">
                          {curso.duracion}
                        </span>
                      </div>
                    </div>
                    
                    <div className="card-mini-intro">
                      <p>{curso.miniIntro}</p>
                    </div>
                    
                    <div className="card-descripcion-container">
                      <p className="card-descripcion">{curso.descripcion}</p>
                    </div>

                    <button className="card-button">
                      <span>Solicit√° m√°s informaci√≥n</span>
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                        <path d="M7 17L17 7M17 7H7M17 7V17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      </svg>
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Cursos;
